var w=Object.defineProperty;var g=(u,c,h)=>c in u?w(u,c,{enumerable:!0,configurable:!0,writable:!0,value:h}):u[c]=h;var p=(u,c,h)=>g(u,typeof c!="symbol"?c+"":c,h);(function(){const c=document.createElement("link").relList;if(c&&c.supports&&c.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const e of r)if(e.type==="childList")for(const t of e.addedNodes)t.tagName==="LINK"&&t.rel==="modulepreload"&&n(t)}).observe(document,{childList:!0,subtree:!0});function h(r){const e={};return r.integrity&&(e.integrity=r.integrity),r.referrerPolicy&&(e.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?e.credentials="include":r.crossOrigin==="anonymous"?e.credentials="omit":e.credentials="same-origin",e}function n(r){if(r.ep)return;r.ep=!0;const e=h(r);fetch(r.href,e)}})();var B=u=>{const c=globalThis;class h{static getStorageForCapacity(r,e){if(!e.BYTES_PER_ELEMENT)throw new Error("Pass in a ArrayBuffer subclass");const t=8+(r+1)*e.BYTES_PER_ELEMENT;return new SharedArrayBuffer(t)}constructor(r,e){if(!e.BYTES_PER_ELEMENT)throw new Error("Pass a concrete typed array class as second argument");this._Type=e,this._capacity=(r.byteLength-8)/e.BYTES_PER_ELEMENT,this.buf=r,this.write_ptr=new Uint32Array(this.buf,0,1),this.read_ptr=new Uint32Array(this.buf,4,1),this.storage=new e(this.buf,8,this._capacity)}get type(){return this._Type.name}push(r){const e=Atomics.load(this.read_ptr,0),t=Atomics.load(this.write_ptr,0);if((t+1)%this._storageCapacity()===e)return 0;const s=Math.min(this._availableWrite(e,t),r.length),i=Math.min(this._storageCapacity()-t,s),a=s-i;return this._copy(r,0,this.storage,t,i),this._copy(r,i,this.storage,0,a),Atomics.store(this.write_ptr,0,(t+s)%this._storageCapacity()),s}pop(r){const e=Atomics.load(this.read_ptr,0),t=Atomics.load(this.write_ptr,0);if(t===e)return 0;const s=!Number.isInteger(r),i=Math.min(this._availableRead(e,t),s?r.length:r);if(s){const a=Math.min(this._storageCapacity()-e,i),o=i-a;this._copy(this.storage,e,r,0,a),this._copy(this.storage,0,r,a,o)}return Atomics.store(this.read_ptr,0,(e+i)%this._storageCapacity()),i}get empty(){const r=Atomics.load(this.read_ptr,0);return Atomics.load(this.write_ptr,0)===r}get full(){const r=Atomics.load(this.read_ptr,0);return(Atomics.load(this.write_ptr,0)+1)%this._capacity!==r}get capacity(){return this._capacity-1}get availableRead(){const r=Atomics.load(this.read_ptr,0),e=Atomics.load(this.write_ptr,0);return this._availableRead(r,e)}get availableWrite(){const r=Atomics.load(this.read_ptr,0),e=Atomics.load(this.write_ptr,0);return this._availableWrite(r,e)}_availableRead(r,e){return e>r?e-r:e+this._storageCapacity()-r}_availableWrite(r,e){let t=r-e-1;return e>=r&&(t+=this._storageCapacity()),t}_storageCapacity(){return this._capacity}_copy(r,e,t,s,i){for(let a=0;a<i;a++)t[s+a]=r[e+a]}}if(c.AudioWorkletProcessor){const n=c.webAudioModules.getModuleScope(u);n.RingBuffer||(n.RingBuffer=h)}return h},b=B,E=u=>{const c=globalThis;if(c.AudioWorkletProcessor&&c.webAudioModules)return;const h=new Map,n=new Map;class r{constructor(){}get apiVersion(){return u}getModuleScope(t){return h.has(t)||h.set(t,{}),h.get(t)}getGroup(t,s){const i=n.get(t);if(i.validate(s))return i;throw"Invalid key"}addGroup(t){n.has(t.groupId)||n.set(t.groupId,t)}removeGroup(t){n.delete(t.groupId)}addWam(t){n.get(t.groupId).addWam(t)}removeWam(t){n.get(t.groupId).removeWam(t)}connectEvents(t,s,i,a=0){n.get(t).connectEvents(s,i,a)}disconnectEvents(t,s,i,a){n.get(t).disconnectEvents(s,i,a)}emitEvents(t,...s){n.get(t.groupId).emitEvents(t,...s)}}c.AudioWorkletProcessor&&(c.webAudioModules||(c.webAudioModules=new r))},A=E,W=(u,c)=>{const h=globalThis;class n{constructor(e,t){this._groupId=e,this._validate=s=>s==t,this._processors=new Map,this._eventGraph=new Map}get groupId(){return this._groupId}get processors(){return this._processors}get eventGraph(){return this._eventGraph}validate(e){return this._validate(e)}addWam(e){this._processors.set(e.instanceId,e)}removeWam(e){this._eventGraph.has(e)&&this._eventGraph.delete(e),this._eventGraph.forEach(t=>{t.forEach(s=>{s&&s.has(e)&&s.delete(e)})}),this._processors.delete(e.instanceId)}connectEvents(e,t,s){const i=this._processors.get(e),a=this._processors.get(t);let o;if(this._eventGraph.has(i)?o=this._eventGraph.get(i):(o=[],this._eventGraph.set(i,o)),o[s])o[s].add(a);else{const d=new Set;d.add(a),o[s]=d}}disconnectEvents(e,t,s){const i=this._processors.get(e);if(!this._eventGraph.has(i))return;const a=this._eventGraph.get(i);if(typeof t>"u"){a.forEach(d=>{d&&d.clear()});return}const o=this._processors.get(t);if(typeof s>"u"){a.forEach(d=>{d&&d.delete(o)});return}a[s]&&a[s].delete(o)}emitEvents(e,...t){if(!this._eventGraph.has(e))return;this._eventGraph.get(e).forEach(i=>{i&&i.forEach(a=>a.scheduleEvents(...t))})}}h.AudioWorkletProcessor&&h.webAudioModules.addGroup(new n(u,c))},S=W,M=u=>{const c=globalThis,n=class n{static getStorageForEventCapacity(e,t,s=void 0){s===void 0?s=n.DefaultExtraBytesPerEvent:s=Math.max(s,n.DefaultExtraBytesPerEvent);const i=(Math.max(n.WamAutomationEventBytes,n.WamTransportEventBytes,n.WamMidiEventBytes,n.WamBinaryEventBytes)+s)*t;return e.getStorageForCapacity(i,Uint8Array)}constructor(e,t,s,i=void 0){this._eventSizeBytes={},this._encodeEventType={},this._decodeEventType={},["wam-automation","wam-transport","wam-midi","wam-sysex","wam-mpe","wam-osc","wam-info"].forEach((o,d)=>{let l=0;switch(o){case"wam-automation":l=n.WamAutomationEventBytes;break;case"wam-transport":l=n.WamTransportEventBytes;break;case"wam-mpe":case"wam-midi":l=n.WamMidiEventBytes;break;case"wam-osc":case"wam-sysex":case"wam-info":l=n.WamBinaryEventBytes;break}this._eventSizeBytes[o]=l,this._encodeEventType[o]=d,this._decodeEventType[d]=o}),this._parameterCode=0,this._parameterCodes={},this._encodeParameterId={},this._decodeParameterId={},this.setParameterIds(s),this._sab=t,i===void 0?i=n.DefaultExtraBytesPerEvent:i=Math.max(i,n.DefaultExtraBytesPerEvent),this._eventBytesAvailable=Math.max(n.WamAutomationEventBytes,n.WamTransportEventBytes,n.WamMidiEventBytes,n.WamBinaryEventBytes)+i,this._eventBytes=new ArrayBuffer(this._eventBytesAvailable),this._eventBytesView=new DataView(this._eventBytes),this._rb=new e(this._sab,Uint8Array),this._eventSizeArray=new Uint8Array(this._eventBytes,0,4),this._eventSizeView=new DataView(this._eventBytes,0,4)}_writeHeader(e,t,s){let i=0;return this._eventBytesView.setUint32(i,e),i+=4,this._eventBytesView.setUint8(i,this._encodeEventType[t]),i+=1,this._eventBytesView.setFloat64(i,Number.isFinite(s)?s:-1),i+=8,i}_encode(e){let t=0;const{type:s,time:i}=e;switch(e.type){case"wam-automation":{if(!(e.data.id in this._encodeParameterId))break;const a=this._eventSizeBytes[s];t=this._writeHeader(a,s,i);const{data:o}=e,d=this._encodeParameterId[o.id],{value:l,normalized:y}=o;this._eventBytesView.setUint16(t,d),t+=2,this._eventBytesView.setFloat64(t,l),t+=8,this._eventBytesView.setUint8(t,y?1:0),t+=1}break;case"wam-transport":{const a=this._eventSizeBytes[s];t=this._writeHeader(a,s,i);const{data:o}=e,{currentBar:d,currentBarStarted:l,tempo:y,timeSigNumerator:v,timeSigDenominator:_,playing:f}=o;this._eventBytesView.setUint32(t,d),t+=4,this._eventBytesView.setFloat64(t,l),t+=8,this._eventBytesView.setFloat64(t,y),t+=8,this._eventBytesView.setUint8(t,v),t+=1,this._eventBytesView.setUint8(t,_),t+=1,this._eventBytesView.setUint8(t,f?1:0),t+=1}break;case"wam-mpe":case"wam-midi":{const a=this._eventSizeBytes[s];t=this._writeHeader(a,s,i);const{data:o}=e,{bytes:d}=o;let l=0;for(;l<3;)this._eventBytesView.setUint8(t,d[l]),t+=1,l++}break;case"wam-osc":case"wam-sysex":case"wam-info":{let a=null;if(e.type==="wam-info"){const{data:v}=e;a=new TextEncoder().encode(v.instanceId)}else{const{data:v}=e;a=v.bytes}const o=a.length,d=this._eventSizeBytes[s];t=this._writeHeader(d+o,s,i),this._eventBytesView.setUint32(t,o),t+=4;const l=t+o;l>this._eventBytesAvailable&&console.error(`Event requires ${l} bytes but only ${this._eventBytesAvailable} have been allocated!`),new Uint8Array(this._eventBytes,t,o).set(a),t+=o}break}return new Uint8Array(this._eventBytes,0,t)}_decode(){let e=0;const t=this._decodeEventType[this._eventBytesView.getUint8(e)];e+=1;let s=this._eventBytesView.getFloat64(e);switch(s===-1&&(s=void 0),e+=8,t){case"wam-automation":{const i=this._eventBytesView.getUint16(e);e+=2;const a=this._eventBytesView.getFloat64(e);e+=8;const o=!!this._eventBytesView.getUint8(e);if(e+=1,!(i in this._decodeParameterId))break;const d=this._decodeParameterId[i];return{type:t,time:s,data:{id:d,value:a,normalized:o}}}case"wam-transport":{const i=this._eventBytesView.getUint32(e);e+=4;const a=this._eventBytesView.getFloat64(e);e+=8;const o=this._eventBytesView.getFloat64(e);e+=8;const d=this._eventBytesView.getUint8(e);e+=1;const l=this._eventBytesView.getUint8(e);e+=1;const y=this._eventBytesView.getUint8(e)==1;return e+=1,{type:t,time:s,data:{currentBar:i,currentBarStarted:a,tempo:o,timeSigNumerator:d,timeSigDenominator:l,playing:y}}}case"wam-mpe":case"wam-midi":{const i=[0,0,0];let a=0;for(;a<3;)i[a]=this._eventBytesView.getUint8(e),e+=1,a++;return{type:t,time:s,data:{bytes:i}}}case"wam-osc":case"wam-sysex":case"wam-info":{const i=this._eventBytesView.getUint32(e);e+=4;const a=new Uint8Array(i);if(a.set(new Uint8Array(this._eventBytes,e,i)),e+=i,t==="wam-info"){const d={instanceId:new TextDecoder().decode(a)};return{type:t,time:s,data:d}}else return{type:t,time:s,data:{bytes:a}}}}return!1}write(...e){const t=e.length;let s=this._rb.availableWrite,i=0,a=0;for(;a<t;){const o=e[a],d=this._encode(o),l=d.byteLength;let y=0;if(s>=l)l===0?i++:y=this._rb.push(d);else break;s-=y,a++}return a-i}read(){if(this._rb.empty)return[];const e=[];let t=this._rb.availableRead,s=0;for(;t>0;){s=this._rb.pop(this._eventSizeArray),t-=s;const i=this._eventSizeView.getUint32(0),a=new Uint8Array(this._eventBytes,0,i-4);s=this._rb.pop(a),t-=s;const o=this._decode();o&&e.push(o)}return e}setParameterIds(e){this._encodeParameterId={},this._decodeParameterId={},e.forEach(t=>{let s=-1;t in this._parameterCodes?s=this._parameterCodes[t]:(s=this._generateParameterCode(),this._parameterCodes[t]=s),this._encodeParameterId[t]=s,this._decodeParameterId[s]=t})}_generateParameterCode(){if(this._parameterCode>65535)throw Error("Too many parameters have been registered!");return this._parameterCode++}};p(n,"DefaultExtraBytesPerEvent",64),p(n,"WamEventBaseBytes",13),p(n,"WamAutomationEventBytes",n.WamEventBaseBytes+2+8+1),p(n,"WamTransportEventBytes",n.WamEventBaseBytes+4+8+8+1+1+1),p(n,"WamMidiEventBytes",n.WamEventBaseBytes+1+1+1),p(n,"WamBinaryEventBytes",n.WamEventBaseBytes+4);let h=n;if(c.AudioWorkletProcessor){const r=c.webAudioModules.getModuleScope(u);r.WamEventRingBuffer||(r.WamEventRingBuffer=h)}return h},V=M,P=(u,c,...h)=>{const n=`(${c.toString()})(${h.map(e=>JSON.stringify(e)).join(", ")});`,r=URL.createObjectURL(new Blob([n],{type:"text/javascript"}));return u.addModule(r)},m=P;b();V();var U="2.0.0-alpha.6",T=async(u,c=`wam-host-${performance.now().toString()}`,h=performance.now().toString())=>(await m(u.audioWorklet,A,U),await m(u.audioWorklet,S,c,h),[c,h]),I=T;export{I as i};
